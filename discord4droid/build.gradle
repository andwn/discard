apply plugin: 'com.android.library'
import org.apache.tools.ant.taskdefs.condition.Os

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 20404
        versionName "2.4.4"
        ndk {
            moduleName = "opus"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }
    task ndkBuild(type: Exec) {
        def ndkCmd = "${android.ndkDirectory}/ndk-build"
        if(Os.isFamily(Os.FAMILY_WINDOWS)) { ndkCmd += '.cmd' }
        commandLine ndkCmd, '-C', file('src/main/jni').absolutePath
    }
    task ndkClean(type: Exec) {
        def ndkCmd = "${android.ndkDirectory}/ndk-build"
        if(Os.isFamily(Os.FAMILY_WINDOWS)) { ndkCmd += '.cmd' }
        commandLine ndkCmd, '-C', file('src/main/jni').absolutePath, 'clean'
    }
    clean.dependsOn 'ndkClean'
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.neovisionaries:nv-websocket-client:1.25'
}
